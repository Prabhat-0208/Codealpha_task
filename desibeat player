<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>üé∂ DesiBeats Music Player</title>
  <link href="https://fonts.googleapis.com/css2?family=Orbitron&family=Poppins&display=swap" rel="stylesheet">
  <style>
    body {
      margin: 0;
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(to right, #ff5f6d, #ffc371);
      color: #fff;
      padding: 20px;
    }
    h1 {
      text-align: center;
      font-family: 'Orbitron', sans-serif;
    }
    .player-container {
      max-width: 900px;
      margin: auto;
      background: rgba(0,0,0,0.6);
      border-radius: 12px;
      padding: 20px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.3);
    }
    input, select {
      padding: 10px;
      border: none;
      border-radius: 8px;
      width: 100%;
      margin: 10px 0;
      font-size: 1em;
    }
    audio {
      width: 100%;
      margin-top: 20px;
    }
    .playlist {
      margin-top: 20px;
    }
    .song {
      background: #222;
      padding: 10px;
      margin: 8px 0;
      border-radius: 6px;
      display: flex;
      justify-content: space-between;
      cursor: pointer;
      transition: background 0.3s;
    }
    .song:hover {
      background: #444;
    }
    .song.active {
      background: #666;
    }
    .controls {
      display: flex;
      justify-content: center;
      gap: 20px;
      margin: 20px 0;
    }
    .controls button {
      background: #ff5f6d;
      border: none;
      border-radius: 8px;
      padding: 10px 20px;
      color: white;
      font-size: 1em;
      cursor: pointer;
      transition: background 0.3s;
    }
    .controls button:hover {
      background: #ffc371;
      color: black;
    }
    .volume-control {
      margin-top: 20px;
    }
    .volume-control input {
      width: 100%;
    }
  </style>
</head>
<body>
  <h1>üéß DesiBeats Player</h1>
  <div class="player-container">
    <input type="text" id="search" placeholder="Search songs..." oninput="renderPlaylist()"/>
    <select id="categoryFilter" onchange="renderPlaylist()">
      <option value="">All Categories</option>
      <option value="Bollywood">Bollywood</option>
      <option value="Punjabi">Punjabi</option>
      <option value="Hindi">Hindi</option>
    </select>

    <div class="controls">
      <button onclick="prevSong()">‚èÆÔ∏è Prev</button>
      <button onclick="togglePlay()">‚èØÔ∏è Play/Pause</button>
      <button onclick="nextSong()">‚è≠Ô∏è Next</button>
    </div>

    <div class="volume-control">
      Volume: <input type="range" min="0" max="1" step="0.01" onchange="changeVolume(this.value)" />
    </div>

    <audio id="audioPlayer" controls></audio>

    <div class="playlist" id="playlist"></div>
  </div>

  <script>
    const audioPlayer = document.getElementById('audioPlayer');

    const songs = [
      {
        title: "Tujh Mein Rab Dikhta Hai",
        category: "Bollywood",
        url: "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-1.mp3"
      },
      {
        title: "Lamborghini - Punjabi Hit",
        category: "Punjabi",
        url: "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3"
      },
      {
        title: "Kal Ho Naa Ho - Hindi Classic",
        category: "Hindi",
        url: "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-3.mp3"
      },
      {
        title: "Tum Hi Ho",
        category: "Bollywood",
        url: "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-4.mp3"
      },
      {
        title: "Proper Patola - Punjabi Banger",
        category: "Punjabi",
        url: "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-5.mp3"
      },
      {
        title: "Channa Mereya",
        category: "Hindi",
        url: "https://www.soundhelix.com/examples/mp3/SoundHelix-Song-6.mp3"
      }
    ];

    let currentSongIndex = 0;

    function renderPlaylist() {
      const list = document.getElementById('playlist');
      const search = document.getElementById('search').value.toLowerCase();
      const category = document.getElementById('categoryFilter').value;
      list.innerHTML = '';

      songs.forEach((song, index) => {
        if (
          (search && !song.title.toLowerCase().includes(search)) ||
          (category && song.category !== category)
        ) return;

        const div = document.createElement('div');
        div.className = 'song' + (index === currentSongIndex ? ' active' : '');
        div.innerHTML = `<span>${song.title}</span><span>${song.category}</span>`;
        div.onclick = () => playSong(index);
        list.appendChild(div);
      });
    }

    function playSong(index) {
      currentSongIndex = index;
      audioPlayer.src = songs[currentSongIndex].url;
      audioPlayer.play();
      renderPlaylist();
    }

    function togglePlay() {
      if (audioPlayer.paused) {
        audioPlayer.play();
      } else {
        audioPlayer.pause();
      }
    }

    function nextSong() {
      currentSongIndex = (currentSongIndex + 1) % songs.length;
      playSong(currentSongIndex);
    }

    function prevSong() {
      currentSongIndex = (currentSongIndex - 1 + songs.length) % songs.length;
      playSong(currentSongIndex);
    }

    function changeVolume(value) {
      audioPlayer.volume = value;
    }

    // Auto play next song on end
    audioPlayer.addEventListener('ended', nextSong);

    // Initialize
    renderPlaylist();
    playSong(currentSongIndex);
  </script>
</body>
</html>
